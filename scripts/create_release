#!/bin/bash

# shared global
new_marketing_version=""

function bump_marketing_version {
  xcconfig_file="$1"

  if [[ -f "$xcconfig_file" ]]; then

    current_marketing_version="$(grep 'MARKETING_VERSION' Reveri/Config/Common.xcconfig | awk '{print $3}')"

    IFS=. read -ra version_numbers <<< "$current_marketing_version"

    major="${version_numbers[0]}"
    minor="${version_numbers[1]}"
    minor=$((minor+1))
    bugfix="0"

    new_marketing_version="${major}.${minor}.${bugfix}"

    echo "setting $new_marketing_version in $xcconfig_file"
    sed -i'.bak' -e "s/^MARKETING_VERSION \= [0-9\.]*$/MARKETING_VERSION = ${new_marketing_version}/" "$xcconfig_file"
    rm "${xcconfig_file}.bak"
  else
    echo "Could not find $xcconfig_file"
    exit 10
  fi
}

function create_release_pull_request {
  repo_url="$1"
  release_branch="$2"
  base_branch="$3"
  title="$release_branch into $base_branch"
  pr_body="Merge $release_branch into $base_branch"
  post_body="{\"title\": \"$title\", \"body\": \"$pr_body\", \"head\": \"$release_branch\", \"base\": \"$base_branch\"}"
  curl -XPOST "${repo_url}/pulls" \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer $GITHUB_TOKEN"\
  -H "X-GitHub-Api-Version: 2022-11-28" \
  -d  "$post_body"
}

function create_release_branch_commit_tag_and_push {

  new_marketing_version="$1"
  repo_url="$2"

  new_branch="release/$new_marketing_version"

  git checkout -b "$new_branch"

  git commit -am "Bumping app version to $new_marketing_version"
  git tag "v$new_marketing_version"

  git push origin "$new_branch" --tags

  create_release_pull_request "$repo_url" "$new_branch" "master"
  create_release_pull_request "$repo_url" "$new_branch" "develop"
}

###Â main

if [[ -z "$GITHUB_TOKEN" ]]; then
  echo "A GITHUB_TOKEN is required"
  echo
  echo " Open the web browser to:"
  echo
  echo "    https://github.com/settings/personal-access-tokens/new"
  echo
  echo "Create a fine-grained personal access token with custom name, desired expiry, repo access to All and Repo Permissions "
  echo
  echo "    Contents:         Read and write"
  echo "    Pull requests:    Read and write (this will enable Metadata too)"
  echo
  echo "This should create a token string beginning with:                github_pat_"
  echo "Add the token to your ~/.zshrc with the name GITHUB_TOKEN"
  echo
  echo "    GITHUB_TOKEN=<your github token>"
  echo
  exit 1
fi

current_branch=$(git rev-parse --abbrev-ref HEAD)
if [[ "$current_branch" != "develop" ]]; then
  echo "Auto release creation should only be executed on the develop branch"
  exit 2
fi

bump_marketing_version "Reveri/Config/Common.xcconfig"

create_release_branch_commit_tag_and_push "$new_marketing_version" "https://api.github.com/repos/mikelrob/release_test" # "https://api.github.com/repos/reveri-health/reveri-ios"

git checkout develop
